const fiatList = require('./fiatList');

const appConfig = {
  config: { // default config
    host: '127.0.0.1',
    safewalletPort: 17777,
    maxDescriptors: {
      darwin: 90000,
      linux: 1000000,
    },
    dev: false,
    debug: false,
    roundValues: false,
    experimentalFeatures: false,
    notifications: false,
    dex: {
      walletUnlockTimeout: 3600,
    },
    lang: 'EN',
    fiatRates: false,
    defaultFiatCurrency: 'usd',
    loadCoinsFromStorage: false,
    requirePinToConfirmTx: false,
    spv: {
      maxVinParseLimit: 120,
      cache: false,
      proxy: false,
      socketTimeout: 10000,
      customServers: false,
      syncServerListFromKv: false,
      allowCustomFees: false,
      listtransactionsMaxLength: 10,
      csvListtransactionsMaxLength: 400,
    },
    native: {
      rpc2cli: false,
      cliStopTimeout: 1000,
      failedRPCAttemptsThreshold: 10,
      stopNativeDaemonsOnQuit: true,
      dataDir: '',
      listtransactionsMaxLength: 300,
      csvListtransactionsMaxLength: 1000,
      zlistreceivedbyaddress: false,
      zgetoperationresult: false,
      zshieldcoinbase: false,
      detectDaemons: false,
    },
    pubkey: '',
    exchanges: {
      coinswitchKey: '',
    },
    userAgreement: false,
    // coinControl: false,
    // darkmode: false,
  },
  schema: {
    host: {
      display: true,
      type: 'string',
      displayName: 'Hostname',
      info: 'Application hostname',
    },
    safewalletPort: {
      display: true,
      type: 'number',
      displayName: 'Safewallet Port',
      info: 'Safewallet HTTP port. Required to run GUI.',
    },
    maxDescriptors: {
      display: false,
      displayName: 'Max Descriptors per Process',
      darwin: {
        display: true,
        displayName: 'MacOS (Darwin)',
        type: 'number',
      },
      linux: {
        display: true,
        displayName: 'Linux',
        type: 'number',
      },
    },
    dev: {
      display: false,
      initDisplay: true,
      displayName: 'Developer mode',
      info: 'Enable developer mode',
      type: 'boolean',
    },
    debug: {
      display: true,
      initDisplay: true,
      displayName: 'Debug',
      info: 'Enable debug output',
      type: 'boolean',
    },
    roundValues: {
      display: true,
      displayName: 'Enable amount rounding',
      info: 'Round \"dust\" amounts to save screen space',
      type: 'boolean',
    },
    experimentalFeatures: {
      display: false,
      initDisplay: true,
      displayName: 'Enable advanced features',
      type: 'boolean',
    },
    notifications: {
      display: true,
      initDisplay: true,
      displayName: 'Enable notifications',
      type: 'boolean',
    },
    dex: {
      display: false,
      displayName: 'dex',
      walletUnlockTimeout: {
        display: true,
        displayName: 'walletUnlockTimeout',
        type: 'number',
      },
    },
    lang: {
      display: true,
      displayName: 'Language',
      type: 'select',
      translateSelector: 'LANG',
      data: ['en', 'de'],
    },
    fiatRates: {
      display: true,
      displayName: 'Fetch fiat rates',
      info: 'Get coin fiat rates from atomicexplorer.com',
      type: 'boolean',
    },
    defaultFiatCurrency: {
      display: true,
      displayName: 'Fiat currency',
      type: 'select',
      translateSelector: 'FIAT_CURRENCIES',
      data: fiatList,
    },
    loadCoinsFromStorage: {
      display: true,
      displayName: 'Load coins list from file',
      info: 'Add favourite coins on app start from a file',
      type: 'boolean',
    },
    requirePinToConfirmTx: {
      display: true,
      displayName: 'Require PIN to confirm a transaction.',
      info: 'Only if you are using seed storage authorization method.<br/>Will not work with a plain seed/WIF.',
      type: 'boolean',
    },
    spv: {
      display: true,
      displayName: 'Lite mode',
      maxVinParseLimit: {
        display: true,
        displayName: 'Max tx inputs parse limit',
        info: 'Maximum inputs to parse per transaction.<br/>Change to lower values if you have the app freeze constantly or to retrieve transaction history faster but with degraded accuracy.<br/>Change to higher values to get maximum transaction history accuracy.',
        type: 'number',
      },
      cache: {
        display: true,
        displayName: 'Cache transactions data to disk',
        type: 'boolean',
      },
      proxy: {
        display: true,
        displayName: 'Use proxy',
        info: 'Enable specialized electrum proxy service',
        type: 'boolean',
      },
      socketTimeout: {
        display: true,
        displayName: 'Socket timeout',
        info: 'Max timeout before electrum server connection is dropped. Value is in milliseconds.',
        type: 'number',
      },
      customServers: {
        display: true,
        displayName: 'Custom electrum servers list',
        info: 'Allow electrum servers list changes.',
        type: 'boolean',
      },
      syncServerListFromKv: {
        display: true,
        displayName: 'Sync electrum servers list from KV',
        info: 'Warning: this is highly experimental feature!',
        type: 'boolean',
      },
      allowCustomFees: {
        display: true,
        displayName: 'Allow custom fees',
        type: 'boolean',
      },
      listtransactionsMaxLength: {
        display: true,
        displayName: 'Max transactions history count',
        type: 'number',
      },
      csvListtransactionsMaxLength: {
        display: true,
        displayName: 'CSV export max transactions history count',
        info: 'Warning: keep this settings option within a sane range of values (default value: 400).<br/>The higher the value the more time it will require to process transactions history.<br/>If multiple transactions are considerably large it may froze the app completely.',
        type: 'number',
      },
    },
    native: {
      display: true,
      displayName: 'Native mode',
      dataDir: {
        display: true,
        initDisplay: true,
        displayName: 'Safecoin data directory',
        info: 'The data directory is the location where Safecoin data files are stored, including the wallet data file<br/>It must be an already existing folder e.g. /home/user/safecoin_data_dir.',
        type: 'folder',
      },
      rpc2cli: {
        display: true,
        displayName: 'Disable RPC',
        info: 'Use CLI instead of RPC JSON server in native mode',
        type: 'boolean',
      },
      cliStopTimeout: {
        display: true,
        displayName: 'CLI stop timeout',
        info: 'Timeout between consequent CLI stop commands. Value is in milliseconds.',
        type: 'number',
      },
      stopNativeDaemonsOnQuit: {
        display: true,
        displayName: 'Stop native daemons on app quit',
        info: 'If set to false safewallet will run in detached coin daemon mode',
        type: 'boolean',
      },
      failedRPCAttemptsThreshold: {
        display: true,
        displayName: 'Failed RPC connect attempts threshold',
        info: 'Number of allowed consequent RPC connect failures before the app marks native coin daemon as not running properly',
        type: 'number',
      },
      listtransactionsMaxLength: {
        display: true,
        displayName: 'Max transactions history count',
        type: 'number',
      },
      csvListtransactionsMaxLength: {
        display: true,
        displayName: 'CSV export max transactions history count',
        info: 'Warning: keep this settings option within a sane range of values (default value: 1000).<br/>The higher the value the more time it will require to process transactions history.',
        type: 'number',
      },
      zlistreceivedbyaddress: {
        display: true,
        displayName: 'Fetch received z transactions (z_listreceivedbyaddress)',
        info: 'Warning: turning on this option may have an impact on weak systems.<br>If you don\'t use private addresses or don\'t need to see all private transactions to your addresses keep this option disabled.',
        type: 'boolean',
      },
      zgetoperationresult: {
        display: true,
        displayName: 'Clear runtime Z transactions data automatically',
        info: 'For maximum privacy it\'s advised to clear all traces of your outgoing z transactions including runtime data.',
        type: 'boolean',
      },
      zshieldcoinbase: {
        display: true,
        displayName: 'Enable shield coinbase button',
        info: 'A handy option if you\'re mining.',
        type: 'boolean',
      },
      detectDaemons: {
        display: true,
        displayName: 'Enable "Detect native daemons" button',
        info: 'A handy option if want to start SAFE/asset chain native with your set of params or run it in background.',
        type: 'boolean',
      },
    },
    pubkey: {
      display: true,
      displayName: 'Pubkey',
      info: 'Append pubkey (-pubkey) to daemon launch params list',
      type: 'string',
    },
    exchanges: {
      display: false,
      displayName: 'Exchanges',
      coinswitchKey: {
        display: true,
        displayName: 'Coinswitch API key',
        info: 'Your personal Coinswitch API key',
        type: 'string',
      },
    },
    userAgreement: {
      display: false,
      displayName: 'User agreement',
      info: 'User agreement',
      type: 'boolean',
    },
    /*coinControl: {
      display: true,
      displayName: 'Coin control',
      info: 'Advanced coin control e.g. UTXO management, split/merge. <br/>Warning: only for experienced users!',
      type: 'boolean',
    },
    /*darkmode: {
      display: true,
      displayName: 'Dark UI theme',
      type: 'boolean',
    },*/
  },
};

module.exports = appConfig;